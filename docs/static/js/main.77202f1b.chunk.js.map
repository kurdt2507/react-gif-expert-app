{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","gifUrl","encodeURI","fetch","response","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","imagenes","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,uDACJ,mCADI,cAEyDC,UAAUH,GAFnE,sBAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAaZL,GAbY,4CAAH,sDCEPQ,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,sBAAKI,UAAU,0CAAf,UACI,qBAAKC,IAAML,EAAMM,IAAMP,IACvB,4BAAKA,QCFJQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNC,YAAW,WACP1B,EAAQC,GAAU0B,MAAK,SAACC,GAAD,OAAUJ,EAAS,CACtChB,KAAMoB,EACNN,SAAS,SAEd,QACJ,CAAErB,IAEEsB,EDb4BM,CAAa5B,GAAnC6B,EADwB,EAC7BtB,KAAec,EADc,EACdA,QAEvB,OACI,qCACI,6BAAMrB,IAEJqB,GAAW,2CAEb,qBAAKJ,UAAU,8CAAf,SACMY,EAASpB,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEZ3B,SAASmB,IAAgB,IAAD,EACS5C,mBAAS,CAAC,cADnB,mBACpBQ,EADoB,KACRT,EADQ,KAG3B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACMS,EAAWe,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAEIA,SAAWA,GADLA,W,MCV9B+B,IAASC,OACP,cAACF,EAAD,IACAG,SAASC,eAAe,W","file":"static/js/main.77202f1b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories((categories) => [inputValue, ...categories]);\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const apiKey = 'F61mP6tNnCSrwZW5ZUaNOmG5SfgXPOiT';\n    const gifUrl = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${ encodeURI(category) }&limit=10`;\n    const response = await fetch(gifUrl);\n    const { data } = await response.json();\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    });\n\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({ id, title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__flipInY\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    const { data:imagenes, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading...</p>}\n\n            <div className=\"card-grid animate__animated animate__fadeIn\">\n                { imagenes.map((img) => (\n                    <GifGridItem\n                        key={ img.id }\n                        { ...img }\n                    />\n                )) }\n            </div>\n        </>\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        setTimeout(() => {\n            getGifs(category).then((imgs) => setState({\n                data: imgs,\n                loading: false\n            }));\n        }, 1500);\n    }, [ category ]);\n\n    return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport function GifExpertApp() {\n    const [categories, setCategories] = useState(['Deat Note']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                { categories.map((category) => (\n                    <GifGrid\n                        key={ category }\n                        category={ category }\n                    />\n                )) }\n            </ol>\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}